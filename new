import pygame
import numpy as np
import time
import math
pygame.init()


WIDTH = 500
HEIGHT = 500

screen = pygame.display.set_mode((WIDTH, HEIGHT))

square = [
    (200, 200),   # Top-left corner
    (300, 200),   # Top-right corner
    (300, 300),   # Bottom-right corner
    (200, 300),   # Bottom-left corner
    (250, 200),   # Top midpoint
    (300, 250),   # Right midpoint
    (250, 300),   # Bottom midpoint
    (200, 250)    # Left midpoint
]

for i in square:
    time.sleep(0.2)
    pygame.draw.circle(screen, 'white', i, 1)
    pygame.display.update()
    



def to_complex(arr):
    c=[]
    for i in arr:
        c.append(complex(i[0], i[1]))
    return c
    
    
c = to_complex(square)
print(c)
dft = np.fft.fft(c)
times = np.linspace(0, 2*math.pi, 100)
for t in times:
    print(t)
    




running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False


            




#https://www.dynamicmath.xyz/fourier-epicycles/
#https://thecodingtrain.com/challenges/130-drawing-with-fourier-transform-and-epicycles
